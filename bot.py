import os
import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ['TOKEN']
ADMIN_CHAT_ID = int(os.environ['ADMIN_CHAT_ID'])

# –í–∫–ª—é—á–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –≠—Ç–∞–ø—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
FREQUENCY, DURATION = range(2)

# –í–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞
QUESTIONS = [
    "–∏—Å–ø—ã—Ç—ã–≤–∞–ª–∏ –ø–æ–ª–Ω—É—é –∞–ø–∞—Ç–∏—é, –ø—Ä–æ—Å—Ç—Ä–∞—Ü–∏—é –∏ –±–µ–∑—É—á–∞—Å—Ç–Ω–æ—Å—Ç—å?",
    "–Ω–µ –º–æ–≥–ª–∏ –∑–∞—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∞–∂–µ –ø—Ä–æ—Å—Ç—ã–µ —Ä—É—Ç–∏–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è?",
    "–æ—â—É—â–∞–ª–∏, —á—Ç–æ –∫—Ä–∞—Å–∫–∏ –∂–∏–∑–Ω–∏ –ø–æ–±–ª–µ–∫–ª–∏, –∞ —Ç–æ, —á—Ç–æ —Ä–∞–Ω—å—à–µ –∑–∞–∂–∏–≥–∞–ª–æ, –±–æ–ª—å—à–µ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç —ç–Ω—Ç—É–∑–∏–∞–∑–º?",
    "–æ—Å—Ç–∞–≤–ª—è–ª–∏ –±–µ–∑ –≤–Ω–∏–º–∞–Ω–∏—è –≤–∞–∂–Ω—ã–µ –¥–ª—è –≤–∞—Å –∑–∞–¥–∞—á–∏, –ø—Ä–µ–Ω–µ–±—Ä–µ–≥–∞–ª–∏ –∏–º–∏?",
    "–æ—â—É—â–∞–ª–∏ –ø–æ–ª–Ω—É—é —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω–æ—Å—Ç—å –∏ –≥–ª—É–±–æ–∫–æ–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ?",
    "—Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞–±–ª—é–¥–∞–ª–∏ –∑–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–º –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å?",
    "–æ—â—É—â–∞–ª–∏ —Ä–∞–¥–æ—Å—Ç—å –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ?",
    "–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª–∏ —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–æ, –Ω–æ –±–µ–∑ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏–ª–∏ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è?",
    "–æ—â—É—â–∞–ª–∏ –ø—Ä–∏—è—Ç–Ω–æ–µ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ –∏/–∏–ª–∏ –ø—Ä–µ–¥–≤–∫—É—à–µ–Ω–∏–µ?",
    "–ø—Ä–æ—è–≤–ª—è–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ —Å —ç–Ω—Ç—É–∑–∏–∞–∑–º–æ–º –¥–µ–π—Å—Ç–≤–æ–≤–∞–ª–∏?",
    "–∏—Å–ø—ã—Ç—ã–≤–∞–ª–∏ –ø–µ—Ä–µ–≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ, –ø–æ–≤—ã—à–µ–Ω–Ω—É—é —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–∞–∂–µ –∫ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º —Å—Ç–∏–º—É–ª–∞–º?",
    "—Ä–∞–∑–¥—Ä–∞–∂–∞–ª–∏—Å—å –∏ —Ç—Ä–µ–≤–æ–∂–∏–ª–∏—Å—å –¥–∞–∂–µ –æ—Ç –º–µ–ª–æ—á–µ–π?",
    "—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –Ω–µ—É–ø—Ä–∞–≤–ª—è–µ–º—É—é –ø–∞–Ω–∏–∫—É, –ø–∞—Ä–∞–ª–∏–∑—É—é—â–∏–π —Å—Ç—Ä–∞—Ö –∏–ª–∏ –≥–Ω–µ–≤?",
    "–Ω–µ –º–æ–≥–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–ª–æ–≤–∞ –∏ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑-–∑–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–∑–±—É–∂–¥–µ–Ω–∏—è?"
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    context.user_data['answers'] = []
    context.user_data['current_question'] = 0
    
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç –Ω–∞ –ù–µ–π—Ä–æ–ë–∞–ª–∞–Ω—Å!\n\n"
        "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ 14 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –≤–∞—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏.",
        reply_markup=ReplyKeyboardRemove()
    )
    
    await send_question(update, context)
    return FREQUENCY

async def send_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    question_index = context.user_data['current_question']
    question_text = QUESTIONS[question_index]
    
    text = f"‚ùì –í–æ–ø—Ä–æ—Å {question_index + 1}/14:\n{question_text}"
    
    keyboard = [
        ["–ù–∏ —Ä–∞–∑—É", "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑"],
        ["–ë–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –¥–Ω–µ–π", "–ü–æ—á—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(text, reply_markup=reply_markup)

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    answer = update.message.text
    question_index = context.user_data['current_question']
    
    # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞
    scores = {"–ù–∏ —Ä–∞–∑—É": 0, "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑": 2, "–ë–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –¥–Ω–µ–π": 5, "–ü–æ—á—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å": 10}
    score = scores.get(answer, 0)
    
    context.user_data['answers'].append(score)
    context.user_data['current_question'] += 1
    
    if context.user_data['current_question'] < len(QUESTIONS):
        await send_question(update, context)
        return FREQUENCY
    else:
        return await show_results(update, context)

async def show_results(update: Update, context: ContextTypes.DEFAULT_TYPE):
    scores = context.user_data['answers']
    total = sum(scores)
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
    burnout = sum(scores[0:4]) / total * 100 if total > 0 else 0
    integration = sum(scores[4:10]) / total * 100 if total > 0 else 0
    distress = sum(scores[10:14]) / total * 100 if total > 0 else 0
    
    result_text = f"""üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê:

üü£ –í—ã–≥–æ—Ä–∞–Ω–∏–µ: {burnout:.1f}%
üü¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {integration:.1f}%
üî¥ –î–∏—Å—Ç—Ä–µ—Å—Å: {distress:.1f}%

üí° –î–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ Instagram"""

    await update.message.reply_text(
        result_text,
        reply_markup=ReplyKeyboardRemove()
    )
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    user = update.message.from_user
    await context.bot.send_message(
        ADMIN_CHAT_ID,
        f"üìä –ù–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name}\n"
        f"–í—ã–≥–æ—Ä–∞–Ω–∏–µ: {burnout:.1f}%\n"
        f"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {integration:.1f}%\n"
        f"–î–∏—Å—Ç—Ä–µ—Å—Å: {distress:.1f}%"
    )
    
    return ConversationHandler.END

def main():
    application = Application.builder().token(TOKEN).build()
    
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            FREQUENCY: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer)]
        },
        fallbacks=[]
    )
    
    application.add_handler(conv_handler)
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

if __name__ == '__main__':
    main()
